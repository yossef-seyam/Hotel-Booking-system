@startuml HotelBookingSystem

skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}

package "com.mycompany.hotelbookingsystem" {
    abstract class Room {
        # double price
        # String roomType
        # int roomID
        # boolean isAvailable
        + Room(roomType: String, price: double, roomID: int)
        + getPrice(): double
        + getRoomType(): String
        + getRoomID(): int
        + IsAvailable(): boolean
        + setPrice(price: double): void
        + setRoomType(roomType: String): void
        + setRoomID(roomID: int): void
        + setIsAvailable(isAvailable: boolean): void
        + {abstract} displayInfo(): String
        + toString(): String
    }

    class SingleRoom {
        - boolean SeaView
        + SingleRoom(SeaView: boolean, roomType: String, price: double, roomID: int)
        + isSeaView(): boolean
        + setSeaView(SeaView: boolean): void
        + displayInfo(): String
    }

    class DoubleRoom {
        - boolean hasBalcony
        + DoubleRoom(hasBalcony: boolean, roomType: String, price: double, roomID: int)
        + hasBalcony(): boolean
        + sethasBalcony(boolean): void
        + displayInfo(): String
    }

    interface Services {
        + orderService(serviceType: String): void
        + getServiceCost(serviceType: String): double
    }

    class SuiteRoom {
        - boolean hasLivingRoom
        + SuiteRoom(hasLivingRoom: boolean, roomType: String, price: double, roomID: int)
        + hasLivingRoom(): boolean
        + sethasLivingRoom(boolean): void
        + displayInfo(): String
        + orderService(serviceType: String): void
        + getServiceCost(serviceType: String): double
        __Service Prices__
        cleaning: 100.0
        laundry: 75.0
        food: 120.0
    }

    class Customer {
        - {static} int nextID
        - final int customerID
        - String name
        - String email
        + Customer(name: String, email: String)
        + displayInfo(): void
        + getName(): String
        + getID(): int
        + getEmail(): String
    }

    class Booking {
        - {static} int nextBookingID
        - final int bookingID
        - Customer customer
        - Room room
        - String startDate
        - String endDate
        + Booking(customer: Customer, room: Room, startDate: String, endDate: String)
        + getBookingID(): int
        + getCustomer(): Customer
        + getRoom(): Room
        + displayInfo(): void
        + toString(): String
    }

    class HotelManager {
        - ArrayList<Room> roomList
        - ArrayList<Customer> customerList
        - ArrayList<Booking> bookingList
        + HotelManager()
        + initializeRooms(): void
        + addRoom(room: Room): void
        + makeReservation(customer: Customer, room: Room, startDate: String, endDate: String): Booking
        + cancelReservation(bookingID: int): void
        + listAvailableRooms(select: int): void
        + listAllCustomers(): void
        + listBookings(): void
        + displayBookingByID(bookingID: int): void
        + findRoomByID(roomID: int): Room
        + findCustomerByID(customerID: int): Customer
        + addCustomer(customer: Customer): void
        + applyDiscount(promoCode: String, roomID: int): void
        + getAvailableRoomsText(): String
        + getBookingDetailsByID(bookingID: int): String
        + getBookingList(): ArrayList<Booking>
        + getCustomerList(): ArrayList<Customer>
        + getRoomList(): ArrayList<Room>
        __Room Pricing__
        Single w/o SeaView: 100.0
        Single w/ SeaView: 150.0
        Double w/o Balcony: 200.0
        Double w/ Balcony: 250.0
        Suite: 300.0
    }
}

package "GUIFrontEnd" {
    class MainWindow {
        + start(stage: Stage): void
        - initializeUI(): void
        - loadImages(): void
    }
}

note "Project Resources Structure" as N1
note "src/main/resources/images/\nContains JavaFX image assets\nSupported formats: PNG, JPEG, GIF" as N2

' Inheritance relationships
Room <|-- SingleRoom
Room <|-- DoubleRoom
Room <|-- SuiteRoom
Services <|.. SuiteRoom

' Associations
HotelManager "1" *-- "*" Room : manages >
HotelManager "1" *-- "*" Customer : manages >
HotelManager "1" *-- "*" Booking : manages >
Booking "1" --> "1" Customer : has >
Booking "1" --> "1" Room : reserves >
MainWindow ..> HotelManager : uses >

@enduml 